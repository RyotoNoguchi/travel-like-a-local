import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
import './globals.css'
import { Header } from '@/app/ui/header'
import { createApolloClient } from '@/apolloClient'
import { LOGO_ASSET_ID } from '@/constants'
import 'dotenv/config'
import { Query, QueryAssetArgs } from '@/generated/graphql'
import { GET_ASSET_QUERY } from '@/graphql/query'
import { zain } from '@/app/ui/fonts'

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app'
}

const RootLayout: React.FC<{ children: React.ReactNode }> = async ({ children }) => {
  const client = createApolloClient()
  const { data } = await client.query<Query, QueryAssetArgs>({
    query: GET_ASSET_QUERY,
    variables: {
      id: LOGO_ASSET_ID
    }
  })

  const asset = data.asset
  const logo = asset && asset.url ? { url: asset.url, title: asset.title || 'Default Title' } : null
  return (
    <html lang='en'>
      <body className={`${zain.className} antialiased`}>
        {logo && <Header logo={logo} />}
        {children}
      </body>
    </html>
  )
}
export default RootLayout
